<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.board2.repository.UserMapper">

    <select id="findAllMembers" resultType="com.study.board2.dto.User">
        SELECT
            u.*, m.*
        FROM
            user u
                LEFT JOIN
            member m ON u.idx = m.idx
        WHERE u.user_role="ROLE_USER"
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="findAllAdmins" resultType="com.study.board2.dto.User">
        SELECT
            u.*, a.*
        FROM
            user u
                LEFT JOIN
            admin a ON u.idx = a.idx
        WHERE u.user_role="ROLE_ADMIN"
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="countMembers" resultType="int">
        SELECT COUNT(*) FROM member
    </select>

    <select id="countAdmins" resultType="int">
        SELECT COUNT(*) FROM admin
    </select>

    <select id="findUserByIdx" parameterType="int" resultType="com.study.board2.dto.User">
        SELECT *
        FROM user
        WHERE idx=#{idx}
    </select>

    <select id="findByUserId" parameterType="String" resultType="com.study.board2.dto.User">
        SELECT *
        FROM user
        WHERE user_id=#{userId}
    </select>

    <select id="findByUsername" parameterType="String" resultType="com.study.board2.dto.User">
        SELECT idx, user_name, user_email
        FROM member
        WHERE user_name = #{userName}
        UNION
        SELECT idx, user_name, user_email
        FROM admin
        WHERE user_name = #{userName}
    </select>

    <select id="findByEmail" parameterType="String" resultType="com.study.board2.dto.User">
        SELECT *
        FROM member
        WHERE user_email = #{userEmail}
        UNION
        SELECT *
        FROM admin
        WHERE user_email = #{userEmail}
    </select>

    <select id="findMemberByIdx" parameterType="int" resultType="com.study.board2.dto.User">
        SELECT
            u.*, m.*
        FROM
            user u
                INNER JOIN
            member m ON u.idx = m.idx
        WHERE
            u.idx = #{idx}
    </select>

    <select id="findAdminByIdx" parameterType="int" resultType="com.study.board2.dto.User">
        SELECT
            u.*, a.*
        FROM
            user u
                INNER JOIN admin a ON u.idx = a.idx
        WHERE
            u.idx = #{idx}
    </select>

    <!-- 사용자 데이터 삽입 -->
    <insert id="insertUser" parameterType="com.study.board2.dto.User" useGeneratedKeys="true" keyProperty="idx">
        INSERT INTO user (user_id, user_pw, reg_date, user_role)
        VALUES (#{userId}, #{userPw}, now(), #{userRole})
    </insert>

    <!-- 회원 데이터 삽입 -->
    <insert id="insertMember" parameterType="com.study.board2.dto.User">
        INSERT INTO member (idx, user_name, user_email)
        VALUES (#{idx}, #{userName}, #{userEmail})
    </insert>

    <!-- 관리자 데이터 삽입 -->
    <insert id="insertAdmin" parameterType="com.study.board2.dto.User">
        INSERT INTO admin (idx, user_name, user_email, use_yn)
        VALUES (#{idx}, #{userName}, #{userEmail}, default)
    </insert>

    <update id="updateMember" parameterType="com.study.board2.dto.User">
        UPDATE member
        SET user_name=#{userName}, user_email=#{userEmail}
        WHERE idx=#{idx}
    </update>

    <update id="updateAdmin" parameterType="com.study.board2.dto.User">
        UPDATE admin
        SET user_name=#{userName}, user_email=#{userEmail}, use_yn=#{useYn}
        WHERE idx=#{idx}
    </update>

    <update id="updateUserPassword" parameterType="com.study.board2.dto.User">
        UPDATE user
        SET user_pw=#{userPw}
        WHERE idx=#{idx}
    </update>
</mapper>